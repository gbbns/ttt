@use 'sass:math';

:root {
    --ratio: 1.2;
    /* RATIO CHANGES */

    @media only screen and (min-width: 500px) and (min-height: 900px) {
        --ratio: 1.1;
    }

    @media only screen and (min-width: 900px) {
        --ratio: 1.15;
    }

    @media only screen and (min-width: 1400px) {
        --ratio: 1.2;
    }

    @media only screen and (min-width: 2000px) {
        --ratio: 1.25;
    }

    --t-base: 1rem;
    --h5: calc(var(--t-base) * var(--ratio));
    --h4: calc(var(--h5) * var(--ratio));
    --h3: calc(var(--h4) * var(--ratio));
    --h2: calc(var(--h3) * var(--ratio));
    --h1: calc(var(--h2) * var(--ratio));
    --h1-xl:calc(var(--h1) * var(--ratio));
}


html {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
        Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial,
        sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
    font-weight: 400;
    font-size: 100%;

    // line-height: 1.25;
    scroll-behavior: smooth;
}

body {
    background: map-get(map-get($palette, background), light);
    color: map-get(map-get($palette, copy), light);
    font-size: 1.125rem;
    line-height: 1.75;
    margin: 0 auto;
    padding: 0 $base-spacing * 3;

    @media (min-width: 40em) {
        padding: 0;
        width: calc(100vw - 10vw);
    }
}

h1,
h2,
h3,
h4,
h5 {
    font-family: 'Mona Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
        Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial,
        sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
    font-weight: 800;
    margin: 3rem 0 1.38rem;
    line-height: 1.3;
    color: map-get(map-get($palette, header), light);

    +p {
        color: map-get(map-get($palette, copy), light);
    }
}

h1 {
    font-size: clamp(2rem, 2rem + 2vw, var(--h1));
    line-height: 1.2;
    margin-top: 0;
}

h2 {
    // font-size: 3.157rem;
    // font-size: var(--h2);
    // font-size: clamp(1.5rem, calc(1.5rem + 2vw), var(--h2));
    // font-size: clamp(1.5rem, 2vw + 1rem, 2.25rem);
    font-size: clamp(1.5rem, 2vw + 1rem, var(--h2));

    line-height: 1.1;
    margin: 0;
    margin-bottom: $base-spacing;
}

h3 {
    // font-size: 2.369rem;
    font-size: var(--h3);
    line-height: 1.1;
    margin: 0;
    margin-bottom: math.div($base-spacing, 2);
}

h4 {
    // font-size: 1.777rem;
    font-size: var(--h41);
}

h5 {
    // font-size: 1.333rem;
    font-size: var(--h5);
}

a {
    color: map-get(map-get($palette, links), light);
    font-weight: 900;
    transition: 0.15s color;
    text-decoration: none;

    &:visited {
        text-decoration: none;
    }

    &:hover {
        text-decoration: underline;
        text-decoration-skip-ink: auto;

        &:focus {
            color: map-get(map-get($palette, links), plain);
        }
    }

    &:focus {
        outline: none;
        background: map-get(map-get($palette, active), light);
        color: map-get(map-get($palette, background), light);
        box-shadow: 0px 0px 0px 4px map-get(map-get($palette, active), light);
    }

    &[rel='noopener'] {
        text-decoration: underline;
    }
}

blockquote {
    border-left: math.div($base-spacing, 2) solid rgba(map-get(map-get($palette, copy), light), 0.15);
    display: inline-block;
    padding-left: $base-spacing;
    margin-left: 0;

    p {
        font-weight: 500;
        padding-left: $base-spacing;
        letter-spacing: 0;
        font-style: italic;

        &:first-of-type {
            font-weight: 600;
        }
    }
}

p {
    display: inline-block;
    margin: 0 0 $base-spacing * 1.5 0;
    margin-bottom: 1rem;

    &:first-of-type {
        color: map-get(map-get($palette, copy), light);
        font-size: 1.25rem;
        font-weight: 600;
        margin-top: 0;
        margin-bottom: $base-spacing * 2;
    }

    &:last-of-type {
        margin-bottom: 0;

        +h2,
        +h3 {
            margin-top: $base-spacing * 1.5;
        }
    }

    a {
        color: map-get(map-get($palette, nav-links), light);
    }
}

ul {
    margin: 0;
    margin-bottom: $base-spacing * 1.5;

    li {

        p,
        p:first-of-type {
            color: map-get(map-get($palette, copy), light);
        }
    }
}

hr,
.is-divider {
    display: block;
    border: 0;
    text-align: center;
    overflow: visible;
    margin: $base-spacing * 4 0 $base-spacing * 3;

    &::before {
        content: '...';
        display: inline-block;
        margin-left: 0.6em;
        color: map-get(map-get($palette, divider), light);
        position: relative;
        top: -1.4rem;
        font-weight: 400;
        font-style: italic;
        font-size: 1.4rem;
        letter-spacing: 1.2rem;
        line-height: 1;
    }
}

small,
.text_small {
    font-size: 0.75rem;
}

strong {
    font-weight: 900;
}